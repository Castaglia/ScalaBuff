// Generated by ScalaBuff, the Scala protocol buffer compiler. DO NOT EDIT!
// source: simple.proto

object Simple {
	final case class SimpleTest (
		requiredField: Int = 0,
		optionalField: Option[Float] = None,
		repeatedField: Vector[String] = Vector.empty[String]
	) extends com.google.protobuf.GeneratedMessageLite
		with hr.sandrogrzicic.scalabuff.runtime.Message[SimpleTest] {

		def getOptionalField = optionalField.getOrElse(0.0f)

		def writeTo(output: com.google.protobuf.CodedOutputStream) {
			output.writeInt32(1, requiredField)
			optionalField.foreach(output.writeFloat(2, _))
			repeatedField.foreach(output.writeString(3, _))
		}
		def mergeFrom(m: SimpleTest) = {
			SimpleTest(
				m.requiredField,
				m.optionalField.orElse(optionalField),
				repeatedField ++ m.repeatedField
			)
		}

		def getDefaultInstanceForType = SimpleTest.defaultInstance
		def clear = getDefaultInstanceForType
		def isInitialized = true
		def build = this
		def buildPartial = this
		def newBuilderForType = this
		def toBuilder = this
	}

	object SimpleTest {
		@reflect.BeanProperty val defaultInstance = new SimpleTest()
		def getDefaultInstance = defaultInstance

		val REQUIRED_FIELD_FIELD_NUMBER = 1
		val OPTIONAL_FIELD_FIELD_NUMBER = 2
		val REPEATED_FIELD_FIELD_NUMBER = 3

	}

	def registerAllExtensions(registry: com.google.protobuf.ExtensionRegistryLite) {
	}

}